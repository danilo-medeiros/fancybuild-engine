package router

import (
	"{{.App.Repository}}/internal/auth"
	"{{.App.Repository}}/internal/healthcheck"
{{range .App.Entities
}}    "{{$.App.Repository}}/internal/{{.Name}}"
{{end
}}    "github.com/gofiber/fiber/v2"
	"go.mongodb.org/mongo-driver/mongo"
)

func Router(app *fiber.App, client *mongo.Client) {
	hc := healthcheck.NewController()
{{range .App.Entities}}{{
    $controller := camelize .Name "controller"
}}    {{$controller}} := {{.Name}}.NewController(
		{{.Name}}.NewService(
			{{.Name}}.NewRepository(
				client,
			),
		),
	)
{{end}}
	v1 := app.Group("/v1")
	v1.Get("/", hc.Get)
{{range .App.Entities}}{{if hasController .Name}}{{
      $group := camelize .Name "grp"}}{{
      $controller := camelize .Name "controller"}}
    {{$group}} := v1.Group("/{{pluralize .Name}}")
{{range .Actions}}{{if eq .Type "create"}}
    {{$group}}.Post("/", {{$controller}}.Create){{end}}{{if eq .Type "getOne"}}
    {{$group}}.Get("/:id", {{$controller}}.GetOne){{end}}{{if eq .Type "getAll"}}
    {{$group}}.Get("/", {{$controller}}.GetAll){{end}}{{if eq .Type "update"}}
    {{$group}}.Put("/:id", {{$controller}}.Update)
    {{$group}}.Patch("/:id", {{$controller}}.Update){{end}}{{if eq .Type "delete"}}
    {{$group}}.Delete("/:id", {{$controller}}.Delete){{end}}{{end}}{{end}}{{end}}	
}
