package entities

// {{capitalize .Entity.Name}} - {{.Entity.Description}}
type {{capitalize .Entity.Name}} struct {
	ID    string  `json:"id" bson:"id"`
{{range .Entity.Fields}}
	{{capitalize .Name}} {{.Type}} `json:"{{.Name}}" bson:"{{.Name}}" validate:"{{buildValidations .}}"`
{{end}}
{{range $.Entity.GetNestedEntities}}
	{{pluralize (capitalize .Name)}} []*{{capitalize .Name}} `json:"{{pluralize .Name}}" bson:"{{pluralize .Name}}" validate:"dive"`
{{end}}
{{if $.Entity.BelongsToAuthenticatedEntity}}
	UserID     string `json:"-" bson:"userId"`
{{end}}
{{if .Entity.Timestamps}}
	Timestamps `json:",inline" bson:",inline"`
{{end}}
}

func New{{capitalize .Entity.Name}}() {{capitalize .Entity.Name}} {
	return {{capitalize .Entity.Name}}{
{{range $.Entity.GetNestedEntities}}
		{{pluralize (capitalize .Name)}}: make([]*{{capitalize .Name}}, 0), // Default value of empty array
{{end}}
	}
}
